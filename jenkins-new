node{
def mavenHome = tool name: "maven3.8.4"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
try{
notifyBuild('STARTED')

stage('checkout')
{
git branch: 'development', credentialsId: 'ff2e00f2-50a8-4d46-8e0e-ead63d9181b3', url: 'https://github.com/maven-tool/maven-web-application.git'
}

stage('build')
{
sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('executeSonarQubeReport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('uploadArtifactsIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}

stage('deployApplicationtoTomcatserver')
{
sshagent(['69c7b5d7-edbb-4c56-b4bf-ee3fe641a857']) {
sh "scp -o strictHostKeyChecking=no target/maven-web-application.war ec2-user@35.154.97.82:/opt/apache-tomcat-9.0.65/webapps"
}
}
*/
}catch(e){
currentBuild.result = "FAILED"
  throw e
  }
  finally{
  notifyBuild('currentBuild.result')
  }
}//nodeclosingtag

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'GREEN'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'general')
}
